{
   	"manifest_version": "1.4",
	"algo_name": "N/A", // the name of your algorithm
	"algo_summary": "N/A", // a 1-line summary of your algorithm
	"algo_description": "N/A", // a few lines description of your algorithm (basic html accepted)
	"algo_website": "http://algorun.org", // url where users can find more information about your algorithm and/or a link to a tutorial or manual to run the algorithm
	"algo_keywords": [], // a list of keywords describing your algorithm
	"published_paper": { // if you already have a published paper for your algorithm. leave blank if not.
            "title": "",
            "url": ""
    	},
	"algo_authors": [ // a list of all the algorithm's authors
		{
			"name": "John Doe",
			"email": "john@doe.com", // make sure you have a gravatar (http://gravatar.com)
            "profile_picture": "", // if you don't have a gravatar, put a profile picture in algorun_info folder and refer to it here
			"personal_website": "http://johndoe.info", // leave "" if not available
			"organization": "John Doe University", // leave "" if not available
			"org_website": "http://johndoe.edu" // leave "" if not available
		},
		{
			"name": "Jim Doe",
			"email": "jim@doe.com", // make sure you have a gravatar (http://gravatar.com)
            "profile_picture": "", // if you don't have a gravatar, put a profile picture in algorun_info folder and refer to it here
			"personal_website": "http://jimdoe.info", // leave "" if not available
			"organization": "John Doe University", // leave "" if not available
			"org_website": "http://johndoe.edu" // leave "" if not available
		}
	],
	"algo_packager": { // the one who packaged the algorithm into AlgoRun container.
            "name": "John Doe",
            "email": "john@doe.com",
            "personal_website": "http://johndoe.info",
            "profile_picture": "",
            "organization": "John Doe University", 
            "org_website": "http://johndoe.edu" 
	},
	"algo_exec": "ruby test.rb $input1 $input2", // the command to start algorithm execution. Use "$" to mark an input to be passed to the command.
	"algo_inputs": { // list all input parameters and their types. Key is input name, where names mut match the names in the command above, and value is input type
		"input1": "direct", // text or number passed immediately in the command-line
		"input2": "file" // if the algorithm reads input from a file. AlgoRun passes the file name here
	},
	"algo_outputs": { // list all output produced by your algorithm. Key is file name and value is file type
		"output1.txt": "text", // output file named "output1.txt" is text
		"output-visualization.png": "image", // output file named "output-visualization.png" should be displayed as image
		"output-log": "stdout" // get the output of the standard output stream
	},
	"algo_parameters": { // list all the parameters available for your algorithm. These parameters will be available for use in your algorithm as environment variables.
		"PARAM1": "default_value",
		"PARAM2": "default_value"
	},
	"input_type": "algorun:custom", // if your algorithm is compatible with other algorithms on AlgoRun, mention the input type it accepts here. Example: "algorun:superadam". leave the default value otherwise.
    "output_type": "algorun:custom", // if your algorithm is compatible with other algorithms on AlgoRun, mention the output type it produces here. Example: "algorun:superadam". leave the default value otherwise.
	"algo_image": "" // Example: "ahosny/react". leave "" if you did not upload your algorithm to docker hub or if you do not know what docker hub is :).
}

